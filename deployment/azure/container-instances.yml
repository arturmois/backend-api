$schema: https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#
contentVersion: 1.0.0.0
parameters:
  containerGroupName:
    type: string
    defaultValue: bens-seguros-api
    metadata:
      description: Name for the container group
  
  containerName:
    type: string
    defaultValue: bens-seguros-api
    metadata:
      description: Name for the container
  
  imageRegistry:
    type: string
    defaultValue: bensseguros.azurecr.io
    metadata:
      description: Container registry URL
  
  imageName:
    type: string
    defaultValue: bens-seguros-api
    metadata:
      description: Container image name
  
  imageTag:
    type: string
    defaultValue: latest
    metadata:
      description: Container image tag
  
  cpuCores:
    type: string
    defaultValue: '1.0'
    metadata:
      description: Number of CPU cores
  
  memoryInGb:
    type: string
    defaultValue: '2.0'
    metadata:
      description: Memory in GB
  
  location:
    type: string
    defaultValue: '[resourceGroup().location]'
    metadata:
      description: Location for resources
  
  databaseUrl:
    type: securestring
    metadata:
      description: Database connection URL
  
  jwtSecret:
    type: securestring
    metadata:
      description: JWT secret key
  
  redisUrl:
    type: securestring
    metadata:
      description: Redis connection URL

variables:
  image: '[concat(parameters('imageRegistry'), '/', parameters('imageName'), ':', parameters('imageTag'))]'

resources:
- type: Microsoft.ContainerInstance/containerGroups
  apiVersion: 2021-07-01
  name: '[parameters('containerGroupName')]'
  location: '[parameters('location')]'
  properties:
    containers:
    - name: '[parameters('containerName')]'
      properties:
        image: '[variables('image')]'
        ports:
        - port: 3000
          protocol: TCP
        environmentVariables:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: '3000'
        - name: DATABASE_URL
          secureValue: '[parameters('databaseUrl')]'
        - name: JWT_SECRET
          secureValue: '[parameters('jwtSecret')]'
        - name: REDIS_URL
          secureValue: '[parameters('redisUrl')]'
        resources:
          requests:
            cpu: '[parameters('cpuCores')]'
            memoryInGB: '[parameters('memoryInGb')]'
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 3
    osType: Linux
    restartPolicy: Always
    ipAddress:
      type: Public
      ports:
      - port: 3000
        protocol: TCP
      dnsNameLabel: '[parameters('containerGroupName')]'
    imageRegistryCredentials:
    - server: '[parameters('imageRegistry')]'
      username: '[parameters('imageRegistry')]'
      password: '[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', split(parameters('imageRegistry'), '.')[0]), '2019-05-01').passwords[0].value]'

outputs:
  containerIPv4Address:
    type: string
    value: '[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]'
  containerFQDN:
    type: string
    value: '[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.fqdn]'